(window.webpackJsonp=window.webpackJsonp||[]).push([[213],{1489:function(t,a,s){t.exports=s.p+"assets/img/XML-parser-by-workato.52a1f162.png"},1490:function(t,a,s){t.exports=s.p+"assets/img/simple-xml-without-attributes.6f63a949.png"},1491:function(t,a,s){t.exports=s.p+"assets/img/full-xml-with-attributes.80f2b2ac.png"},2574:function(t,a,s){"use strict";s.r(a);var e=s(0),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"handling-xml"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#handling-xml"}},[t._v("#")]),t._v(" Handling XML")]),t._v(" "),e("p",[t._v("XML (eXtensible Markup Language) is a syntax for storing and transferring data. It is a common data format for APIs. XML data is stored in a systematic hierarchy of tags.")]),t._v(" "),e("p",[t._v("XML data is mostly hidden from regular Workato users because we expose data as input fields and output datapills in the recipe. However, you may occasionally require raw XML data for your use case.")]),t._v(" "),e("h3",{attrs:{id:"example-nested-data-in-xml-format"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#example-nested-data-in-xml-format"}},[t._v("#")]),t._v(" Example: Nested data in XML format")]),t._v(" "),e("p",[t._v("We will be using this sample request body formatted in XML:")]),t._v(" "),e("div",{staticClass:"language-xml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-xml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("Contact")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("Name")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("C"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("First")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Sally"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("First")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("Last")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Jones"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("Last")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("Name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("Address")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("Street")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("verified")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("215 Castro Street, Suite 300"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("Street")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("City")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("verified")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Mountain View"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("City")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("ST")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("verified")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("CA"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("ST")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("Postal")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("verified")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("95041"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("Postal")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("Address")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("Phone")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("validation")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("mobile")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("8444696752"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("Phone")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("Contact")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),e("p",[t._v("The XML data is stored in a top level tag "),e("code",[t._v("<Contact>")]),t._v(", which has nested tags "),e("code",[t._v("<Name>")]),t._v(", "),e("code",[t._v("<Address>")]),t._v(", and "),e("code",[t._v("<Phone>")]),t._v(". These tags further contain nested tags. This feature allows XML to create, store and transport deeply nested data.")]),t._v(" "),e("h2",{attrs:{id:"xml-parser-by-workato"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#xml-parser-by-workato"}},[t._v("#")]),t._v(" XML parser by Workato")]),t._v(" "),e("p",[t._v("The easiest way to convert raw XML data into usable datapills is to parse it with the built-in XML parser. "),e("strong",[t._v("XML Parser by Workato")]),t._v(" is a native application that does not require any connection setup.")]),t._v(" "),e("p",[t._v("Select "),e("strong",[t._v("App")]),t._v(" > "),e("strong",[t._v("XML parser by Workato")]),t._v(" to get started.")]),t._v(" "),e("p",[e("DocImage",{attrs:{src:s(1489),alt:"XML parser by Workato input fields",width:"1240",height:"962"}}),t._v(" "),e("em",[t._v("XML parser by Workato input fields")])],1),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Input field")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("XML type")]),t._v(" "),e("td",[t._v("Select the level of detail to parse the XML. See "),e("a",{attrs:{href:"#parse-at-different-levels-of-detail"}},[t._v("below")]),t._v(".")])]),t._v(" "),e("tr",[e("td",[t._v("Sample document")]),t._v(" "),e("td",[t._v("A sample XML that has the same format as the XML document to be parsed.")])]),t._v(" "),e("tr",[e("td",[t._v("Document")]),t._v(" "),e("td",[t._v("The input XML content to be parsed.")])])])]),t._v(" "),e("h3",{attrs:{id:"parse-at-different-levels-of-detail"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#parse-at-different-levels-of-detail"}},[t._v("#")]),t._v(" Parse at different levels of detail")]),t._v(" "),e("p",[t._v("Workato automatically understands the basic XML syntax and displays datapills in the corresponding datatypes (e.g. "),e("code",[t._v("string")]),t._v(", "),e("code",[t._v("integer")]),t._v("). Configure the "),e("strong",[t._v("XML type")]),t._v(" to retrieve the desired level of detail. You can choose to configure it to "),e("a",{attrs:{href:"#simple-xml-without-attributes"}},[t._v("simple XML without attributes")]),t._v(" or to "),e("a",{attrs:{href:"#full-xml-with-attributes"}},[t._v("full XML with attributes")]),t._v(".")]),t._v(" "),e("h4",{attrs:{id:"simple-xml-without-attributes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#simple-xml-without-attributes"}},[t._v("#")]),t._v(" Simple XML without attributes")]),t._v(" "),e("p",[t._v("This configuration reads the default XML syntax and the "),e("code",[t._v("type")]),t._v(" attribute. Besides the "),e("code",[t._v("type")]),t._v(" attribute, no other attributes will be processed.")]),t._v(" "),e("p",[t._v("This will generate a simplified datatree and will be sufficient for most use-cases.")]),t._v(" "),e("p",[e("DocImage",{attrs:{src:s(1490),alt:"Datatree output for simple XML without attributes",width:"457",height:"540"}}),t._v(" "),e("em",[t._v("Datatree output for simple XML without attributes")])],1),t._v(" "),e("h4",{attrs:{id:"full-xml-with-attributes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#full-xml-with-attributes"}},[t._v("#")]),t._v(" Full XML with attributes")]),t._v(" "),e("p",[t._v("For certain use-cases, you would have need attribute values for validation or for syncing between systems. Choose "),e("strong",[t._v("full XML with attributes")]),t._v(" to generate a detailed datatree.")]),t._v(" "),e("p",[e("DocImage",{attrs:{src:s(1491),alt:"Datatree output for full XML with attributes",width:"457",height:"540"}}),t._v(" "),e("em",[t._v("Datatree output for full XML with attributes")])],1),t._v(" "),e("p",[t._v("All attributes are now included in the output datatree. Additionally, the structure of the output is slightly different. Each XML tag is now presented as an ["),e("code",[t._v("array")]),t._v("] datapill with the value of the tag presented in the ["),e("code",[t._v("Content")]),t._v("] datapill.")]),t._v(" "),e("h2",{attrs:{id:"integrating-xml-into-your-workflow"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#integrating-xml-into-your-workflow"}},[t._v("#")]),t._v(" Integrating XML into your workflow")]),t._v(" "),e("p",[t._v("Besides handling XML data within your recipe actions, working with raw XML content involves configuring your Workato recipes to receive such data. Integrate XML content into your workflow by configuring a "),e("strong",[t._v("REST endpoint that accepts raw content")]),t._v(" or by "),e("strong",[t._v("developing a custom connector")]),t._v(".")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("Rest endpoint with raw content support")])])]),t._v(" "),e("p",[t._v("Setup a callable recipe that accepts Raw body content and expose it as a REST endpoint. Now, API calls can deliver XML payload directly to the callable recipe. Find out more about setting up REST endpoints to handle XML data "),e("router-link",{attrs:{to:"/features/callable-recipes/handling-raw-content.html"}},[t._v("here")]),t._v(".")],1),t._v(" "),e("ul",[e("li",[e("strong",[t._v("Developing custom connectors")])])]),t._v(" "),e("p",[t._v("Custom connectors allow you to customize the way you receive and interact with your cloud applications through API calls.")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Custom connector")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("HTTP connector")]),t._v(" "),e("td",[t._v("The HTTP connector is a convenient way to handle raw data from APIs. Refer to our "),e("a",{attrs:{href:"http://resources.workato.com/http-connector/#/?_k=1szm77",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTTP connector course"),e("OutboundLink")],1),t._v(" for a detailed guide and examples on building HTTP triggers and actions to handle XML data.")])]),t._v(" "),e("tr",[e("td",[t._v("Workato connector SDK")]),t._v(" "),e("td",[t._v("Workato connector SDK is an extension of the Workato framework. It supports a variety of authentication procedures and allows developers to build, maintain and distribute connectors to integration-seekers. Please refer to the main "),e("router-link",{attrs:{to:"/developing-connectors/sdk.html"}},[t._v("Workato SDK documentation")]),t._v(" for more details.")],1)])])]),t._v(" "),e("p",[t._v("Refer to our documentation on the "),e("router-link",{attrs:{to:"/developing-connectors/http-vs-sdk.html"}},[t._v("HTTP vs SDK")]),t._v(" for a detailed comparison.")],1)])}),[],!1,null,null,null);a.default=n.exports}}]);