(window.webpackJsonp=window.webpackJsonp||[]).push([[214],{1574:function(t,a,s){t.exports=s.p+"assets/img/non-nested-where-formula.2b089a73.png"},1575:function(t,a,s){t.exports=s.p+"assets/img/nested-where-formula.9988f611.png"},1576:function(t,a,s){t.exports=s.p+"assets/img/regex-datapill.78678f7a.png"},2585:function(t,a,s){"use strict";s.r(a);var e=s(0),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"lists-and-hashes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lists-and-hashes"}},[t._v("#")]),t._v(" Lists and hashes")]),t._v(" "),e("p",[t._v("When you work with formulas and repeating structures, there are 2 key data structures you need to understand: arrays (lists) and hashes. Take note that most formulas will return an error and stop the job if it tries to operate on nulls (expressed as "),e("code",[t._v("nil")]),t._v(" in Ruby), except for "),e("code",[t._v("present?")]),t._v(", "),e("code",[t._v("presence")]),t._v(" and "),e("code",[t._v("blank?")]),t._v(".")]),t._v(" "),e("p",[t._v("You can refer to the complete Ruby documentation for arrays (lists) "),e("a",{attrs:{href:"https://ruby-doc.org/core-2.2.0/Array.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),e("OutboundLink")],1),t._v(" as well as the Ruby documentation for hashes "),e("a",{attrs:{href:"https://docs.ruby-lang.org/en/2.0.0/Hash.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("h1",{attrs:{id:"lists-arrays"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lists-arrays"}},[t._v("#")]),t._v(" Lists (arrays)")]),t._v(" "),e("p",[t._v("Arrays are ordered, integer-indexed collections of any object. List indexing starts at 0. Lists are the same as Ruby arrays, and we will be using lists and arrays interchangeably in this article.")]),t._v(" "),e("p",[t._v("Let's take the example of a list with 4 list items: 100, 101, 102, 103. This list is expressed as:")]),t._v(" "),e("div",{staticClass:"language-ruby extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ruby"}},[e("code",[t._v("number_list "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("101")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("102")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("103")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("104")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),e("p",[t._v("As lists are ordered, we can use the following formula to get the values. Workato only supports retrieving up to the fifth item in the list:")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Example")]),t._v(" "),e("th",[t._v("Result")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("number_list.first")])]),t._v(" "),e("td",[t._v("100")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("number_list.second")])]),t._v(" "),e("td",[t._v("101")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("number_list.third")])]),t._v(" "),e("td",[t._v("102")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("number_list.fourth")])]),t._v(" "),e("td",[t._v("103")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("number_list.fifth")])]),t._v(" "),e("td",[t._v("104")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("number_list.last")])]),t._v(" "),e("td",[t._v("104")])])])]),t._v(" "),e("p",[t._v("We can also use indexes to get corresponding values. Remember, indexes start at 0:")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Example")]),t._v(" "),e("th",[t._v("Result")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("number_list[0]")])]),t._v(" "),e("td",[t._v("100")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("number_list[1]")])]),t._v(" "),e("td",[t._v("101")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("number_list[2]")])]),t._v(" "),e("td",[t._v("102")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("number_list[3]")])]),t._v(" "),e("td",[t._v("103")])])])]),t._v(" "),e("p",[t._v("Lists in Ruby supports negative indexes.")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Example")]),t._v(" "),e("th",[t._v("Result")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("number_list[-1]")])]),t._v(" "),e("td",[t._v("104")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("number_list[-2]")])]),t._v(" "),e("td",[t._v("103")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("number_list[-3]")])]),t._v(" "),e("td",[t._v("102")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("number_list[-4]")])]),t._v(" "),e("td",[t._v("101")])])])]),t._v(" "),e("p",[t._v("Lists also support ranges as indexes. This returns another list, instead of returning only a value.")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Example")]),t._v(" "),e("th",[t._v("Result")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("number_list[0..2]")])]),t._v(" "),e("td",[t._v("[100, 101, 102]")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("number_list[-3..-1]")])]),t._v(" "),e("td",[t._v("[102, 103, 104]")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("number_list[0..-2]")])]),t._v(" "),e("td",[t._v("[100, 101, 102]")])])])]),t._v(" "),e("h1",{attrs:{id:"hashes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hashes"}},[t._v("#")]),t._v(" Hashes")]),t._v(" "),e("p",[t._v("A hash is a dictionary-like collection of unique keys and their values. They are similar to Lists, but where a List uses integers as its index, a Hash allows you to use any object type. Hashes enumerate their values in the order that the corresponding keys were inserted.")]),t._v(" "),e("p",[t._v("Let's take the example of a hash with 2 values, with "),e("code",[t._v("'Acme widgets'")]),t._v(" and "),e("code",[t._v("10")]),t._v(" as the values of item_name and item_quantity respectively.")]),t._v(" "),e("div",{staticClass:"language-ruby extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ruby"}},[e("code",[t._v("line_item "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'item_name'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Acme widgets'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'item_qty'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("table",[e("thead",[e("tr",[e("th",[t._v("Example")]),t._v(" "),e("th",[t._v("Result")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("line_item[“item_name”]")])]),t._v(" "),e("td",[t._v('"Acme widgets”')])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("line_item[“item_qty”]")])]),t._v(" "),e("td",[t._v("10")])])])]),t._v(" "),e("h1",{attrs:{id:"list-of-hashes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#list-of-hashes"}},[t._v("#")]),t._v(" List of hashes")]),t._v(" "),e("p",[t._v("In Workato, you will mostly run into lists of hashes. Let's look at a Quickbooks invoice which has a number of line items. It will be represented as an list of hashes.")]),t._v(" "),e("div",{staticClass:"language-ruby extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ruby"}},[e("code",[t._v("line_items "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("                                          "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# list")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'item_name'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Acme widgets'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'item_qty'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# hash 1")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'item_name'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'RR bearings'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'item_qty'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# hash 2")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'item_name'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Coyote tyres'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'item_qty'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# hash 3")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),e("h1",{attrs:{id:"formulas"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#formulas"}},[t._v("#")]),t._v(" Formulas")]),t._v(" "),e("p",[t._v("Workato supports a variety of list formulas. Formulas in Workato are whitelisted Ruby methods, and therefore not all Ruby methods are supported. You can always "),e("router-link",{attrs:{to:"/contact-us.html"}},[t._v("reach out to us")]),t._v(" to add additional formulas to the whitelist. Syntax and functionality for these formulas are generally unchanged.")],1),t._v(" "),e("h2",{attrs:{id:"example-list-of-hashes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#example-list-of-hashes"}},[t._v("#")]),t._v(" Example list of hashes")]),t._v(" "),e("p",[t._v("The following is an example of a list of hashes called "),e("strong",[t._v("Contacts")]),t._v(".")]),t._v(" "),e("p",[t._v("This is the Contacts list in a table form:")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("name")]),t._v(" "),e("th",[t._v("email")]),t._v(" "),e("th",[t._v("state")]),t._v(" "),e("th",[t._v("company")]),t._v(" "),e("th",[t._v("company_rev")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("Joe")]),t._v(" "),e("td",[e("a",{attrs:{href:"mailto:joe@abc.om"}},[t._v("joe@abc.om")])]),t._v(" "),e("td",[t._v("CA")]),t._v(" "),e("td",[t._v("ABC")]),t._v(" "),e("td",[t._v("1000")])]),t._v(" "),e("tr",[e("td",[t._v("Jill")]),t._v(" "),e("td",[e("a",{attrs:{href:"mailto:jill@nbc.com"}},[t._v("jill@nbc.com")])]),t._v(" "),e("td",[t._v("MA")]),t._v(" "),e("td",[t._v("NBC")]),t._v(" "),e("td",[t._v("1000")])]),t._v(" "),e("tr",[e("td",[t._v("Joan")]),t._v(" "),e("td",[e("a",{attrs:{href:"mailto:joan@nbc.com"}},[t._v("joan@nbc.com")])]),t._v(" "),e("td",[t._v("MA")]),t._v(" "),e("td",[t._v("NBC")]),t._v(" "),e("td",[t._v("10000")])]),t._v(" "),e("tr",[e("td",[t._v("Jack")]),t._v(" "),e("td",[e("a",{attrs:{href:"mailto:jack@hbo.com"}},[t._v("jack@hbo.com")])]),t._v(" "),e("td",[t._v("CA")]),t._v(" "),e("td",[t._v("HBO")]),t._v(" "),e("td",[t._v("30000")])])])]),t._v(" "),e("p",[t._v("This is the Contacts list in a list of hashes form.")]),t._v(" "),e("div",{staticClass:"language-ruby extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ruby"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'name'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Joe'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'email'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'joe@abc.com'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'state'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'CA'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'company'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ABC'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'company_rev'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'name'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Jill'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'email'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'jill@nbc.com'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'state'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'MA'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'company'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'NBC'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'company_rev'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'name'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Joan'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'email'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'joan@nbc.com'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'state'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'MA'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'company'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'NBC'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'company_rev'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10000")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'name'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Jack'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'email'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'jack@hbo.com'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'state'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'CA'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'company'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'HBO'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'company_rev'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("30000")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),e("h2",{attrs:{id:"first"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#first"}},[t._v("#")]),t._v(" first")]),t._v(" "),e("p",[t._v("Returns the first item in a list. Can also be used to return the first n items in a list, as a list.")]),t._v(" "),e("h3",{attrs:{id:"example"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#example"}},[t._v("#")]),t._v(" Example")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Example")]),t._v(" "),e("th",[t._v("Result")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v('["Jean", "Marie"].first')])]),t._v(" "),e("td",[e("code",[t._v('"Jean"')])])]),t._v(" "),e("tr",[e("td",[e("code",[t._v('["Ms", "Jean", "Marie"].first')])]),t._v(" "),e("td",[e("code",[t._v('"Ms"')])])]),t._v(" "),e("tr",[e("td",[e("code",[t._v('["Ms", "Jean", "Marie"].first(2)')])]),t._v(" "),e("td",[e("code",[t._v('["Ms", "Jean"]')])])])])]),t._v(" "),e("hr"),t._v(" "),e("h2",{attrs:{id:"last"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#last"}},[t._v("#")]),t._v(" last")]),t._v(" "),e("p",[t._v("Returns the last item in a list. Can also be used to return the last n items in a list, as a list.")]),t._v(" "),e("h3",{attrs:{id:"example-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#example-2"}},[t._v("#")]),t._v(" Example")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Example")]),t._v(" "),e("th",[t._v("Result")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v('["Jean", "Marie"].last')])]),t._v(" "),e("td",[e("code",[t._v('"Marie"')])])]),t._v(" "),e("tr",[e("td",[e("code",[t._v('["Ms", "Jean", "Marie"].last')])]),t._v(" "),e("td",[e("code",[t._v('"Marie"')])])]),t._v(" "),e("tr",[e("td",[e("code",[t._v('["Ms", "Jean", "Marie"].last(2)')])]),t._v(" "),e("td",[e("code",[t._v('["Jean", "Marie"]')])])])])]),t._v(" "),e("hr"),t._v(" "),e("h2",{attrs:{id:"where"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#where"}},[t._v("#")]),t._v(" where")]),t._v(" "),e("p",[t._v("Retrieves only the rows (hashes) which satisfy the specified WHERE condition. This formula accepts a single argument in the form of a hash with one or more key-value pairs.")]),t._v(" "),e("p",[t._v("The default operand for the condition is "),e("strong",[t._v("equal to")]),t._v(" ("),e("code",[t._v("==")]),t._v("). This formula also supports the following operands. Operands should be added to the end of key separated by a space.")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Name")]),t._v(" "),e("th",[t._v("Notation")]),t._v(" "),e("th",[t._v("Example")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("Equal to (default)")]),t._v(" "),e("td",[t._v("==")]),t._v(" "),e("td",[e("code",[t._v("leads.where('state': 'CA')")])])]),t._v(" "),e("tr",[e("td",[t._v("More than")]),t._v(" "),e("td",[t._v(">")]),t._v(" "),e("td",[e("code",[t._v("leads.where('company_revenue >\": 10000)")])])]),t._v(" "),e("tr",[e("td",[t._v("More than or equal to")]),t._v(" "),e("td",[t._v(">=")]),t._v(" "),e("td",[e("code",[t._v("leads.where('company_revenue >=\": 10000)")])])]),t._v(" "),e("tr",[e("td",[t._v("Less than")]),t._v(" "),e("td",[t._v("<")]),t._v(" "),e("td",[e("code",[t._v("leads.where('company_revenue <\": 10000)")])])]),t._v(" "),e("tr",[e("td",[t._v("Less than or equal to")]),t._v(" "),e("td",[t._v("<=")]),t._v(" "),e("td",[e("code",[t._v("leads.where('company_revenue <=\": 10000)")])])]),t._v(" "),e("tr",[e("td",[t._v("Not equal to")]),t._v(" "),e("td",[t._v("!=")]),t._v(" "),e("td",[e("code",[t._v("leads.where('state !=': 'CA')")])])])])]),t._v(" "),e("h3",{attrs:{id:"example-of-simple-where-formula"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#example-of-simple-where-formula"}},[t._v("#")]),t._v(" Example of simple where formula")]),t._v(" "),e("p",[e("code",[t._v("contacts.where('state': 'CA')")]),t._v(" returns the following rows:")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("name")]),t._v(" "),e("th",[t._v("email")]),t._v(" "),e("th",[t._v("state")]),t._v(" "),e("th",[t._v("company")]),t._v(" "),e("th",[t._v("company_rev")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("Joe")]),t._v(" "),e("td",[e("a",{attrs:{href:"mailto:joe@abc.om"}},[t._v("joe@abc.om")])]),t._v(" "),e("td",[t._v("CA")]),t._v(" "),e("td",[t._v("ABC")]),t._v(" "),e("td",[t._v("1000")])]),t._v(" "),e("tr",[e("td",[t._v("Jack")]),t._v(" "),e("td",[e("a",{attrs:{href:"mailto:jack@hbo.com"}},[t._v("jack@hbo.com")])]),t._v(" "),e("td",[t._v("CA")]),t._v(" "),e("td",[t._v("HBO")]),t._v(" "),e("td",[t._v("30000")])])])]),t._v(" "),e("p",[t._v("These rows will be expressed as a list of hashes:")]),t._v(" "),e("div",{staticClass:"language-ruby extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ruby"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'name'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Joe'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'email'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'joe@abc.com'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'state'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'CA'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'company'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ABC'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'company_rev'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'name'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Jack'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'email'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'jack@hbo.com'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'state'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'CA'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'company'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'HBO'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'company_rev'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("30000")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),e("p",[t._v("The following is a simple WHERE formula retrieving lead records with the company Delphi Chemicals.")]),t._v(" "),e("p",[e("code",[t._v("leads.where('Company': 'Delphi Chemicals')")])]),t._v(" "),e("p",[e("DocImage",{attrs:{src:s(1574),alt:"Simple where formula retrieving lead records from company Delphi Chemicals",width:"976",height:"501"}}),t._v(" "),e("em",[t._v("Simple where formula retrieving lead records from company Delphi Chemicals")])],1),t._v(" "),e("h3",{attrs:{id:"example-of-where-formula-for-nested-fields"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#example-of-where-formula-for-nested-fields"}},[t._v("#")]),t._v(" Example of where formula for nested fields")]),t._v(" "),e("p",[t._v("Sometimes, the field(s) you want to filter are nested. In that case, the WHERE condition should use nested fields syntax.")]),t._v(" "),e("p",[e("code",[t._v("leads.where('Address.Country': 'USA')")])]),t._v(" "),e("p",[e("DocImage",{attrs:{src:s(1575),alt:"Nested where formula retrieving lead records with an address in USA",width:"1000",height:"528"}}),t._v(" "),e("em",[t._v("Nested where formula retrieving records with an address in USA")])],1),t._v(" "),e("h3",{attrs:{id:"example-of-compound-where-formula"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#example-of-compound-where-formula"}},[t._v("#")]),t._v(" Example of compound where formula")]),t._v(" "),e("p",[t._v("A compound WHERE formula will retrieve only the rows that matches all the conditions.")]),t._v(" "),e("p",[e("code",[t._v("contacts.where('state': 'CA', 'company_revenue >=\": 10000)")])]),t._v(" "),e("p",[t._v("will returns the following row(s):")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("name")]),t._v(" "),e("th",[t._v("email")]),t._v(" "),e("th",[t._v("state")]),t._v(" "),e("th",[t._v("company")]),t._v(" "),e("th",[t._v("company_rev")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("Jack")]),t._v(" "),e("td",[e("a",{attrs:{href:"mailto:jack@hbo.com"}},[t._v("jack@hbo.com")])]),t._v(" "),e("td",[t._v("CA")]),t._v(" "),e("td",[t._v("HBO")]),t._v(" "),e("td",[t._v("30000")])])])]),t._v(" "),e("p",[t._v("These rows will be expressed as a list of hashes:")]),t._v(" "),e("div",{staticClass:"language-ruby extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ruby"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'name'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Jack'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'email'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'jack@hbo.com'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'state'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'CA'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'company'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'HBO'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'company_rev'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("30000")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),e("h3",{attrs:{id:"example-of-multiple-matches"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#example-of-multiple-matches"}},[t._v("#")]),t._v(" Example of multiple matches")]),t._v(" "),e("p",[t._v("You can filter out records based on a particular field against more than 1 value. This is done by passing an array value in the WHERE condition.")]),t._v(" "),e("p",[e("code",[t._v("contacts.where('company': ['ABC','HBO'])")])]),t._v(" "),e("p",[t._v("This WHERE condition will return rows where the company is either "),e("strong",[t._v("ABC")]),t._v(" or "),e("strong",[t._v("HBO")]),t._v(":")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("name")]),t._v(" "),e("th",[t._v("email")]),t._v(" "),e("th",[t._v("state")]),t._v(" "),e("th",[t._v("company")]),t._v(" "),e("th",[t._v("company_rev")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("Joe")]),t._v(" "),e("td",[e("a",{attrs:{href:"mailto:joe@abc.om"}},[t._v("joe@abc.om")])]),t._v(" "),e("td",[t._v("CA")]),t._v(" "),e("td",[t._v("ABC")]),t._v(" "),e("td",[t._v("1000")])]),t._v(" "),e("tr",[e("td",[t._v("Jack")]),t._v(" "),e("td",[e("a",{attrs:{href:"mailto:jack@hbo.com"}},[t._v("jack@hbo.com")])]),t._v(" "),e("td",[t._v("CA")]),t._v(" "),e("td",[t._v("HBO")]),t._v(" "),e("td",[t._v("30000")])])])]),t._v(" "),e("p",[t._v("These rows will be returned as a list of hashes.")]),t._v(" "),e("div",{staticClass:"language-ruby extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ruby"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'name'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Joe'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'email'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'joe@abc.com'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'state'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'CA'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'company'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ABC'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'company_rev'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'name'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Jack'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'email'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'jack@hbo.com'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'state'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'CA'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'company'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'HBO'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'company_rev'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("30000")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),e("h3",{attrs:{id:"example-of-pattern-matching"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#example-of-pattern-matching"}},[t._v("#")]),t._v(" Example of pattern matching")]),t._v(" "),e("p",[t._v("You can also filter out records using regex. This is done by passing a regex instead of a string.")]),t._v(" "),e("p",[e("code",[t._v("contacts.where('name': /^Jo/)")])]),t._v(" "),e("p",[t._v("This WHERE condition will return rows where the name starts with "),e("strong",[t._v("Jo")]),t._v(":")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("name")]),t._v(" "),e("th",[t._v("email")]),t._v(" "),e("th",[t._v("state")]),t._v(" "),e("th",[t._v("company")]),t._v(" "),e("th",[t._v("company_rev")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("Joe")]),t._v(" "),e("td",[e("a",{attrs:{href:"mailto:joe@abc.om"}},[t._v("joe@abc.om")])]),t._v(" "),e("td",[t._v("CA")]),t._v(" "),e("td",[t._v("ABC")]),t._v(" "),e("td",[t._v("1000")])]),t._v(" "),e("tr",[e("td",[t._v("Joan")]),t._v(" "),e("td",[e("a",{attrs:{href:"mailto:joan@nbc.com"}},[t._v("joan@nbc.com")])]),t._v(" "),e("td",[t._v("MA")]),t._v(" "),e("td",[t._v("NBC")]),t._v(" "),e("td",[t._v("10000")])])])]),t._v(" "),e("p",[t._v("These rows will be expressed as a list of hashes:")]),t._v(" "),e("div",{staticClass:"language-ruby extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ruby"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'name'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Joe'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'email'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'joe@abc.com'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'state'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'CA'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'company'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ABC'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'company_rev'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'name'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Joan'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'email'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'joan@nbc.com'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'state'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'MA'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'company'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'NBC'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'company_rev'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10000")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),e("h4",{attrs:{id:"using-datapills-in-pattern-matching"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#using-datapills-in-pattern-matching"}},[t._v("#")]),t._v(" Using datapills in pattern matching")]),t._v(" "),e("p",[t._v("You may use data pills within a regex pattern to dynamically change the string that you are matching. However, using variables in a regex pattern requires escaping within the regex expression.")]),t._v(" "),e("p",[t._v("For example: "),e("code",[t._v("contacts.where(state: /#{datapill}/)")])]),t._v(" "),e("p",[t._v("The image below shows the method used to obtain all the 'Emails' in lookup table where the value in the 'State' column contains the string in the datapill from Salesforce, "),e("code",[t._v("State | Step 2")]),t._v(".")]),t._v(" "),e("p",[e("DocImage",{attrs:{src:s(1576),alt:"Datapill in regex expression",width:"1416",height:"244"}}),t._v(" "),e("em",[t._v("Using datapills in regex expressions")])],1),t._v(" "),e("p",[e("strong",[t._v("Note:")]),t._v(" All regex metacharacters will need to be escaped if they should not be interpreted as metacharacters.")]),t._v(" "),e("h3",{attrs:{id:"example-of-complex-reduction"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#example-of-complex-reduction"}},[t._v("#")]),t._v(" Example of complex reduction")]),t._v(" "),e("p",[t._v("If a series of WHERE conditions are chained, the formula evaluates each where condition in series.")]),t._v(" "),e("p",[e("code",[t._v("contacts.where('state': 'CA').where('company_revenue >=': 10000)")]),t._v(" returns the following rows, which is the same as the compound where formula:")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("name")]),t._v(" "),e("th",[t._v("email")]),t._v(" "),e("th",[t._v("state")]),t._v(" "),e("th",[t._v("company")]),t._v(" "),e("th",[t._v("company_rev")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("Jack")]),t._v(" "),e("td",[e("a",{attrs:{href:"mailto:jack@hbo.com"}},[t._v("jack@hbo.com")])]),t._v(" "),e("td",[t._v("CA")]),t._v(" "),e("td",[t._v("HBO")]),t._v(" "),e("td",[t._v("30000")])])])]),t._v(" "),e("p",[t._v("In this case, however, the chaining will result in an intermediary array:")]),t._v(" "),e("p",[e("code",[t._v("contacts.where('state': 'CA')")]),t._v(" first returns:")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("name")]),t._v(" "),e("th",[t._v("email")]),t._v(" "),e("th",[t._v("state")]),t._v(" "),e("th",[t._v("company")]),t._v(" "),e("th",[t._v("company_rev")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("Joe")]),t._v(" "),e("td",[e("a",{attrs:{href:"mailto:joe@abc.om"}},[t._v("joe@abc.om")])]),t._v(" "),e("td",[t._v("CA")]),t._v(" "),e("td",[t._v("ABC")]),t._v(" "),e("td",[t._v("1000")])]),t._v(" "),e("tr",[e("td",[t._v("Jack")]),t._v(" "),e("td",[e("a",{attrs:{href:"mailto:jack@hbo.com"}},[t._v("jack@hbo.com")])]),t._v(" "),e("td",[t._v("CA")]),t._v(" "),e("td",[t._v("HBO")]),t._v(" "),e("td",[t._v("30000")])])])]),t._v(" "),e("p",[t._v("And "),e("code",[t._v(".where('company_revenue >=': 10000)")]),t._v(" filters this intermediary array further to return only:")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("name")]),t._v(" "),e("th",[t._v("email")]),t._v(" "),e("th",[t._v("state")]),t._v(" "),e("th",[t._v("company")]),t._v(" "),e("th",[t._v("company_rev")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("Jack")]),t._v(" "),e("td",[e("a",{attrs:{href:"mailto:jack@hbo.com"}},[t._v("jack@hbo.com")])]),t._v(" "),e("td",[t._v("CA")]),t._v(" "),e("td",[t._v("HBO")]),t._v(" "),e("td",[t._v("30000")])])])]),t._v(" "),e("p",[t._v("Results will be expressed as a list of hashes:")]),t._v(" "),e("div",{staticClass:"language-ruby extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ruby"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'name'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Jack'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'email'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'jack@hbo.com'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'state'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'CA'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'company'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'HBO'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'company_rev'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1000'")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),e("h3",{attrs:{id:"except"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#except"}},[t._v("#")]),t._v(" except")]),t._v(" "),e("p",[t._v("Returns a hash that includes everything except given keys.")]),t._v(" "),e("div",{staticClass:"language-ruby extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ruby"}},[e("code",[t._v("hash "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("nil")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nhash"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("except"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":c")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("     "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# => { a: true, b: false }")]),t._v("\nhash"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("except"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":a")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":b")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# => { c: nil }")]),t._v("\nhash                "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# => { a: true, b: false, c: nil }")]),t._v("\n")])])]),e("hr"),t._v(" "),e("h2",{attrs:{id:"pluck"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pluck"}},[t._v("#")]),t._v(" pluck")]),t._v(" "),e("p",[t._v("Retrieves only the columns which have been specified.")]),t._v(" "),e("h3",{attrs:{id:"example-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#example-3"}},[t._v("#")]),t._v(" Example")]),t._v(" "),e("p",[e("code",[t._v("contacts.pluck(“email”)")]),t._v(" returns")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("email")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("a",{attrs:{href:"mailto:joe@abc.com"}},[t._v("joe@abc.com")])])]),t._v(" "),e("tr",[e("td",[e("a",{attrs:{href:"mailto:jill@nbc.com"}},[t._v("jill@nbc.com")])])]),t._v(" "),e("tr",[e("td",[e("a",{attrs:{href:"mailto:joan@nbc.com"}},[t._v("joan@nbc.com")])])]),t._v(" "),e("tr",[e("td",[e("a",{attrs:{href:"mailto:jack@hbo.com"}},[t._v("jack@hbo.com")])])])])]),t._v(" "),e("p",[t._v("If a single column, results will be returned as an array:")]),t._v(" "),e("div",{staticClass:"language-ruby extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ruby"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("joe"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@abc")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" jill"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@nbc")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" joan"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@nbc")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" jack"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@hbo")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),e("p",[e("code",[t._v("contacts.where(“state ==”: “CA”).pluck(“email”, “company”)")]),t._v(" returns")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("email")]),t._v(" "),e("th",[t._v("company")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("a",{attrs:{href:"mailto:joe@abc.com"}},[t._v("joe@abc.com")])]),t._v(" "),e("td",[t._v("ABC")])]),t._v(" "),e("tr",[e("td",[e("a",{attrs:{href:"mailto:jill@nbc.com"}},[t._v("jill@nbc.com")])]),t._v(" "),e("td",[t._v("NBC")])]),t._v(" "),e("tr",[e("td",[e("a",{attrs:{href:"mailto:joan@nbc.com"}},[t._v("joan@nbc.com")])]),t._v(" "),e("td",[t._v("NBC")])]),t._v(" "),e("tr",[e("td",[e("a",{attrs:{href:"mailto:jack@hbo.com"}},[t._v("jack@hbo.com")])]),t._v(" "),e("td",[t._v("HBO")])])])]),t._v(" "),e("p",[t._v("Results are returned as a list of a list:")]),t._v(" "),e("div",{staticClass:"language-ruby extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ruby"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"joe@abc.com"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ABC"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jill@nbc.com, "')]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NBC")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"], ["')]),t._v("joan"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@nbc")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"NBC"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jack@hbo.com, "')]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HBO")]),t._v('"'),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),e("hr"),t._v(" "),e("h2",{attrs:{id:"format-map"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#format-map"}},[t._v("#")]),t._v(" format_map")]),t._v(" "),e("p",[t._v("Create an array of strings by formatting each row of given array of hashes. Allows you to add static text to the created strings as well. Fields to be represented in the formaat %{"),e("strong",[t._v("<field_name>")]),t._v("}")]),t._v(" "),e("h3",{attrs:{id:"example-4"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#example-4"}},[t._v("#")]),t._v(" Example")]),t._v(" "),e("p",[e("code",[t._v("contacts.format_map('Name: %{name}, Email: %{email}, Company: %{company}')")]),t._v("  returns")]),t._v(" "),e("div",{staticClass:"language-ruby extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ruby"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Name: Joe, Email: joe@abc.com, Company: ABC'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Name: Jill, Email: jill@nbc.com, Company: NBC'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Name: Joan, Email: joan@nbc.com, Company: NBC'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Name: Jack, Email: jack@hbo.com, Company: HBO'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),e("p",[t._v("The above example will give you a list of strings, one string for each row of the list "),e("strong",[t._v('"contacts"')]),t._v(", using data from 3 of the fields: name, email and company, as stated.")]),t._v(" "),e("hr"),t._v(" "),e("h2",{attrs:{id:"join"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#join"}},[t._v("#")]),t._v(" join")]),t._v(" "),e("p",[t._v("Works on a list to concatenate values together as a string. The values are joined together via the parameter defined.")]),t._v(" "),e("h3",{attrs:{id:"example-5"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#example-5"}},[t._v("#")]),t._v(" Example")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Example")]),t._v(" "),e("th",[t._v("Result")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v('["Joe", "Jill", "Joan", "Jack"].join(",")')]),t._v(" "),e("td",[t._v('"Joe,Jill,Joan,Jack"')])]),t._v(" "),e("tr",[e("td",[t._v('["Joe", "Jill", "Joan", "Jack"].join(", ")')]),t._v(" "),e("td",[t._v('"Joe, Jill, Joan, Jack"')])]),t._v(" "),e("tr",[e("td",[t._v('["Joe", "Jill", "Joan", "Jack"].join("-")')]),t._v(" "),e("td",[t._v('"Joe-Jill-Joan-Jack"')])]),t._v(" "),e("tr",[e("td",[t._v('["Joe", "Jill", "Joan", "Jack"].join(" ")')]),t._v(" "),e("td",[t._v('"Joe Jill Joan Jack"')])])])]),t._v(" "),e("p",[t._v("We can also chain .join behind any formula that returns a list, such as\n"),e("code",[t._v("contacts.where(“state ==”: “CA”).pluck(“email”).join(“, ”)")]),t._v(". This returns")]),t._v(" "),e("div",{staticClass:"language-ruby extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ruby"}},[e("code",[t._v("“joe"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@abc")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" jack"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@hbo")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com”\n")])])]),e("hr"),t._v(" "),e("h2",{attrs:{id:"smart-join"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#smart-join"}},[t._v("#")]),t._v(" smart_join")]),t._v(" "),e("p",[t._v("Joins array elements into a string. Removes empty and nil values and trims any white space before joining.")]),t._v(" "),e("h3",{attrs:{id:"example-6"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#example-6"}},[t._v("#")]),t._v(" Example")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Example")]),t._v(" "),e("th",[t._v("Result")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v('[nil, "", "Hello", " ", "World"].smart_join(" ")')])]),t._v(" "),e("td",[t._v('"Hello World"')])]),t._v(" "),e("tr",[e("td",[e("code",[t._v('["111 Vinewood Drive", "", "San Francisco", "CA", "95050"].smart_join(",")')])]),t._v(" "),e("td",[t._v('"111 Vinewood Drive, San Francisco, CA, 95050"')])])])]),t._v(" "),e("hr"),t._v(" "),e("h2",{attrs:{id:"reverse"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#reverse"}},[t._v("#")]),t._v(" reverse")]),t._v(" "),e("p",[t._v("Reverses the order of a list.")]),t._v(" "),e("h3",{attrs:{id:"example-7"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#example-7"}},[t._v("#")]),t._v(" Example")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Example")]),t._v(" "),e("th",[t._v("Result")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v('["Joe", "Jill", "Joan", "Jack"].reverse')])]),t._v(" "),e("td",[t._v('["Jack", "Joan", "Jill", "Joe"]')])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("[100, 101, 102, 103].reverse")])]),t._v(" "),e("td",[t._v("[103, 102, 101, 100]")])])])]),t._v(" "),e("hr"),t._v(" "),e("h2",{attrs:{id:"sum"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sum"}},[t._v("#")]),t._v(" sum")]),t._v(" "),e("p",[t._v("For integers and decimals, the numbers will be added together and the total sum obtained. For strings, the strings will be concatenated together to form a longer string.")]),t._v(" "),e("h3",{attrs:{id:"example-8"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#example-8"}},[t._v("#")]),t._v(" Example")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Example")]),t._v(" "),e("th",[t._v("Result")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("[1, 2, 3].sum")])]),t._v(" "),e("td",[t._v("6")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("[1.5, 2.5, 3].sum")])]),t._v(" "),e("td",[t._v("7.0")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v('["abc", "xyz"].sum')])]),t._v(" "),e("td",[t._v('"abcxyz"')])])])]),t._v(" "),e("hr"),t._v(" "),e("h2",{attrs:{id:"uniq"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#uniq"}},[t._v("#")]),t._v(" uniq")]),t._v(" "),e("p",[t._v("Returns a list containing unique items i.e. remove duplicate items.")]),t._v(" "),e("h3",{attrs:{id:"example-9"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#example-9"}},[t._v("#")]),t._v(" Example")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Example")]),t._v(" "),e("th",[t._v("Result")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v('["joe", "jack", "jill", "joe", "jack"].uniq')])]),t._v(" "),e("td",[t._v('["joe","jack", "jill"]')])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("[1, 2, 3, 1, 1, 3].uniq")])]),t._v(" "),e("td",[t._v("[1, 2, 3]")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("[1.0, 1.5, 1.0].uniq")])]),t._v(" "),e("td",[t._v("[1.0, 1.5]")])])])]),t._v(" "),e("hr"),t._v(" "),e("h2",{attrs:{id:"flatten"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flatten"}},[t._v("#")]),t._v(" flatten")]),t._v(" "),e("p",[t._v("Flattens a multi-dimensional array (i.e. array of arrays) to a single dimension array.")]),t._v(" "),e("h3",{attrs:{id:"example-10"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#example-10"}},[t._v("#")]),t._v(" Example")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Example")]),t._v(" "),e("th",[t._v("Result")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("[[1, 2, 3], [4, 5, 6]].flatten")])]),t._v(" "),e("td",[t._v("[1, 2, 3, 4, 5, 6]")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("[[1, [2, 3], 3], [4, 5, 6]].flatten")])]),t._v(" "),e("td",[t._v("[1, 2, 3, 3, 4, 5, 6]")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("[[1, [2, 3], 9], [9, 8, 7]].flatten")])]),t._v(" "),e("td",[t._v("[1, 2, 3, 9, 9, 8, 7]")])])])]),t._v(" "),e("hr"),t._v(" "),e("h2",{attrs:{id:"length"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#length"}},[t._v("#")]),t._v(" length")]),t._v(" "),e("p",[t._v("Returns the number of elements in self. May be zero.")]),t._v(" "),e("h3",{attrs:{id:"example-11"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#example-11"}},[t._v("#")]),t._v(" Example")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Example")]),t._v(" "),e("th",[t._v("Result")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("[ 1, 2, 3, 4, 5 ].length")])]),t._v(" "),e("td",[t._v("5")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("[{..}, {..}, {..}].length")])]),t._v(" "),e("td",[t._v("3")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v('[" ", nil, "", nil].length')])]),t._v(" "),e("td",[t._v("4")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("[].length")])]),t._v(" "),e("td",[t._v("0")])])])]),t._v(" "),e("hr"),t._v(" "),e("h2",{attrs:{id:"max"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#max"}},[t._v("#")]),t._v(" max")]),t._v(" "),e("p",[t._v("Returns largest value in an array. When comparing numbers, the largest number is returned. When comparing strings, the string with the largest ASCII value is returned.")]),t._v(" "),e("h3",{attrs:{id:"example-12"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#example-12"}},[t._v("#")]),t._v(" Example")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Example")]),t._v(" "),e("th",[t._v("Result")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("[-5, 0, 1, 2, 3, 4, 5].max")])]),t._v(" "),e("td",[t._v("5")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("[-1.5, 1.5, 2, 3, 3.5].max")])]),t._v(" "),e("td",[t._v("3.5")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v('["cat", "dog", "rat"].max')])]),t._v(" "),e("td",[t._v('"rat"')])])])]),t._v(" "),e("hr"),t._v(" "),e("h2",{attrs:{id:"min"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#min"}},[t._v("#")]),t._v(" min")]),t._v(" "),e("p",[t._v("Returns smallest value in an array. When comparing numbers, the smallest number is returned. When comparing strings, the string with the smallest ASCII value is returned.")]),t._v(" "),e("h3",{attrs:{id:"example-13"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#example-13"}},[t._v("#")]),t._v(" Example")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Example")]),t._v(" "),e("th",[t._v("Result")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("[-5, 0, 1, 2, 3, 4, 5].min")])]),t._v(" "),e("td",[t._v("-5")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("[-1.5, 1.5, 2, 3, 3.5].min")])]),t._v(" "),e("td",[t._v("-1.5")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v('["cat", "dog", "rat"].min')])]),t._v(" "),e("td",[t._v('"cat"')])])])]),t._v(" "),e("hr"),t._v(" "),e("h1",{attrs:{id:"conditionals"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#conditionals"}},[t._v("#")]),t._v(" Conditionals")]),t._v(" "),e("h2",{attrs:{id:"include"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#include"}},[t._v("#")]),t._v(" include?")]),t._v(" "),e("p",[t._v("Returns true if the given object is present, otherwise returns false.")]),t._v(" "),e("h3",{attrs:{id:"example-14"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#example-14"}},[t._v("#")]),t._v(" Example")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Example")]),t._v(" "),e("th",[t._v("Result")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v('["a", "b", "c"].include?("b")')])]),t._v(" "),e("td",[t._v("true")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v('["a", "b", "c"].include?("z")')])]),t._v(" "),e("td",[t._v("false")])])])]),t._v(" "),e("hr"),t._v(" "),e("h2",{attrs:{id:"present"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#present"}},[t._v("#")]),t._v(" present?")]),t._v(" "),e("p",[t._v("This function will check the input, returning true if there is a value present. If input is null, an empty string. or an empty array, formula returns false.")]),t._v(" "),e("h3",{attrs:{id:"example-15"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#example-15"}},[t._v("#")]),t._v(" Example")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Example")]),t._v(" "),e("th",[t._v("Result")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v('["", nil].present?')])]),t._v(" "),e("td",[t._v("true")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v('" ".present?')])]),t._v(" "),e("td",[t._v("false")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("[].present?")])]),t._v(" "),e("td",[t._v("false")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v('["cat", "dog", "rat"].present?')])]),t._v(" "),e("td",[t._v("true")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("[1, 2, 3.0].present?")])]),t._v(" "),e("td",[t._v("true")])])])]),t._v(" "),e("hr"),t._v(" "),e("h2",{attrs:{id:"presence"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#presence"}},[t._v("#")]),t._v(" presence")]),t._v(" "),e("p",[t._v("This function will check the input, returning its value if there is one present, else returning nil.")]),t._v(" "),e("h3",{attrs:{id:"example-16"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#example-16"}},[t._v("#")]),t._v(" Example")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Example")]),t._v(" "),e("th",[t._v("Result")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v('["", nil].presence')])]),t._v(" "),e("td",[t._v('["", nil]')])]),t._v(" "),e("tr",[e("td",[e("code",[t._v('" ".presence')])]),t._v(" "),e("td",[t._v("nil")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("[].presence")])]),t._v(" "),e("td",[t._v("nil")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v('["cat", "dog", "rat"].presence')])]),t._v(" "),e("td",[t._v('["cat", "dog", "rat"]')])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("[1, 2, 3.0].presence")])]),t._v(" "),e("td",[t._v("[1, 2, 3.0]")])])])]),t._v(" "),e("hr"),t._v(" "),e("h1",{attrs:{id:"conversion"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#conversion"}},[t._v("#")]),t._v(" Conversion")]),t._v(" "),e("p",[t._v("The following formulas allows you to convert data from arrays to other data types")]),t._v(" "),e("hr"),t._v(" "),e("h2",{attrs:{id:"to-csv"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#to-csv"}},[t._v("#")]),t._v(" to_csv")]),t._v(" "),e("p",[t._v("Generates CSV line from an array. This handles escaping. Nil values and empty strings will also be expressed within the csv line.")]),t._v(" "),e("h3",{attrs:{id:"example-17"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#example-17"}},[t._v("#")]),t._v(" Example")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Example")]),t._v(" "),e("th",[t._v("Result")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v('["John Smith", "No-Email", " ", nil, "555-1212"].to_csv')])]),t._v(" "),e("td",[t._v('"John Smith,No-Email, ,,555-1212 "')])]),t._v(" "),e("tr",[e("td",[e("code",[t._v('["John Smith", "No-Email", " ", nil, 1212].to_csv')])]),t._v(" "),e("td",[t._v('"John Smith,No-Email, ,,1212"')])])])]),t._v(" "),e("hr"),t._v(" "),e("h2",{attrs:{id:"to-json"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#to-json"}},[t._v("#")]),t._v(" to_json")]),t._v(" "),e("p",[t._v("Converts hash or array to JSON string")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Example")]),t._v(" "),e("th",[t._v("Result")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("Hash: "),e("code",[t._v('{"pet" => "cat", "color" => "gray"}.to_json')])]),t._v(" "),e("td",[t._v('{"pet":"cat","color":"gray"}')])]),t._v(" "),e("tr",[e("td",[t._v("Array: "),e("code",[t._v('["1","2","3"].to_json')])]),t._v(" "),e("td",[t._v('["1", "2", "3"]')])])])]),t._v(" "),e("hr"),t._v(" "),e("h2",{attrs:{id:"to-xml"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#to-xml"}},[t._v("#")]),t._v(" to_xml")]),t._v(" "),e("p",[t._v("Converts hash or array into XML string")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Example")]),t._v(" "),e("th",[t._v("Result")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v('{"name" => "Ken"}.to_xml(root: "user")')])]),t._v(" "),e("td",[e("code",[t._v("<user><name>Ken</name></user>")])])]),t._v(" "),e("tr",[e("td",[e("code",[t._v('[{"name" => "Ken"}].to_xml(root: "users")')])]),t._v(" "),e("td",[e("code",[t._v("<users><user><name>Ken</name></user></users>")])])])])]),t._v(" "),e("hr"),t._v(" "),e("h2",{attrs:{id:"encode-www-form"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#encode-www-form"}},[t._v("#")]),t._v(" encode_www_form")]),t._v(" "),e("p",[t._v("Join hash into url-encoded string of parameters")]),t._v(" "),e("h3",{attrs:{id:"example-18"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#example-18"}},[t._v("#")]),t._v(" Example")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Example")]),t._v(" "),e("th",[t._v("Result")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v('{"apple" => "red green", "2" => "3"}.encode_www_form')])]),t._v(" "),e("td",[t._v('"apple=red+green&2=3"')])])])]),t._v(" "),e("hr"),t._v(" "),e("h2",{attrs:{id:"to-param"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#to-param"}},[t._v("#")]),t._v(" to_param")]),t._v(" "),e("p",[t._v("Returns a string representation for use as a URL query string.")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Example")]),t._v(" "),e("th",[t._v("Result")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("{name: 'Jake', age: '22'}.to_param")])]),t._v(" "),e("td",[t._v('"name=Jake&age=22"')])])])])])}),[],!1,null,null,null);a.default=r.exports}}]);