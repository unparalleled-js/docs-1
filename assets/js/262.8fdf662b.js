(window.webpackJsonp=window.webpackJsonp||[]).push([[262],{1177:function(t,e,r){t.exports=r.p+"assets/img/updated-project-trigger.2cd86a5f.png"},1178:function(t,e,r){t.exports=r.p+"assets/img/updated-project-trigger-real-time.ebd23dc7.png"},2444:function(t,e,r){"use strict";r.r(e);var d=r(0),o=Object(d.a)({},(function(){var t=this,e=t.$createElement,d=t._self._c||e;return d("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[d("h1",{attrs:{id:"wrike-new-updated-project-triggers"}},[d("a",{staticClass:"header-anchor",attrs:{href:"#wrike-new-updated-project-triggers"}},[t._v("#")]),t._v(" Wrike - New/updated project triggers")]),t._v(" "),d("p",[t._v("Projects are one of the main ways to organize, manage, and report on work within Wrike. In essence, Wrike projects are folders with additional properties.")]),t._v(" "),d("h2",{attrs:{id:"new-updated-project-trigger"}},[d("a",{staticClass:"header-anchor",attrs:{href:"#new-updated-project-trigger"}},[t._v("#")]),t._v(" New/updated project trigger")]),t._v(" "),d("p",[t._v("This trigger picks up projects that are created or updated and returns the project tree data. Each record is processed as a separate job.")]),t._v(" "),d("p",[d("DocImage",{attrs:{src:r(1177),alt:"New/updated project trigger",width:"2538",height:"1392"}}),t._v(" "),d("em",[t._v("New/updated project trigger")])],1),t._v(" "),d("h3",{attrs:{id:"input-fields"}},[d("a",{staticClass:"header-anchor",attrs:{href:"#input-fields"}},[t._v("#")]),t._v(" Input fields")]),t._v(" "),d("table",{staticClass:"unchanged rich-diff-level-one"},[d("thead",[d("tr",[d("th",{attrs:{width:"25%"}},[t._v("Input field")]),t._v(" "),d("th",[t._v("Description")])])]),t._v(" "),d("tbody",[d("tr",[d("td",[t._v("When first started, this recipe should pick up events from")]),t._v(" "),d("td",[t._v("\n        Projects created or updated after this time will be processed by the recipe. If left blank, the default will be set to "),d("b",[t._v("one hour")]),t._v(" before the recipe is first started.\n      ")])])])]),t._v(" "),d("h3",{attrs:{id:"output-fields"}},[d("a",{staticClass:"header-anchor",attrs:{href:"#output-fields"}},[t._v("#")]),t._v(" Output fields")]),t._v(" "),d("table",{staticClass:"unchanged rich-diff-level-one"},[d("thead",[d("tr",[d("th",{attrs:{width:"25%"}},[t._v("Output field")]),t._v(" "),d("th",[t._v("Description")])])]),t._v(" "),d("tbody",[d("tr",[d("td",[t._v("Project ID")]),t._v(" "),d("td",[t._v("\n        The ID of the project.\n      ")])]),t._v(" "),d("tr",[d("td",[t._v("Account ID")]),t._v(" "),d("td",[t._v("\n        The ID of the account.\n      ")])]),t._v(" "),d("tr",[d("td",[t._v("Title")]),t._v(" "),d("td",[t._v("\n        The title of the project.\n      ")])]),t._v(" "),d("tr",[d("td",[t._v("Updated date")]),t._v(" "),d("td",[t._v("\n        The date this project was updated.\n      ")])]),t._v(" "),d("tr",[d("td",[t._v("Created date")]),t._v(" "),d("td",[t._v("\n        The date this project was created.\n      ")])]),t._v(" "),d("tr",[d("td",[t._v("Description")]),t._v(" "),d("td",[t._v("\n        The description of the project. Will be blank if not specified.\n      ")])]),t._v(" "),d("tr",[d("td",[t._v("Users who share the project")]),t._v(" "),d("td",[t._v("\n        The list of users who share the project.\n        "),d("table",[d("tbody",[d("tr",[d("td",[t._v("User ID")]),t._v(" "),d("td",[t._v("The ID of the user who shares this project.")])]),t._v(" "),d("tr",[d("td",[t._v("List size")]),t._v(" "),d("td",[t._v("The size of the list, corresponding to the number of users retrieved.")])])])])])]),t._v(" "),d("tr",[d("td",[t._v("Parent folder")]),t._v(" "),d("td",[t._v("\n        The list of parent folders of this project.\n        "),d("table",[d("tbody",[d("tr",[d("td",[t._v("Project ID")]),t._v(" "),d("td",[t._v("The project ID of the parent folder.")])]),t._v(" "),d("tr",[d("td",[t._v("List size")]),t._v(" "),d("td",[t._v("The size of the list, corresponding to the number of parent folders retrieved.")])])])])])]),t._v(" "),d("tr",[d("td",[t._v("Child folder")]),t._v(" "),d("td",[t._v("\n        The list of child folders of this project.\n        "),d("table",[d("tbody",[d("tr",[d("td",[t._v("Project ID")]),t._v(" "),d("td",[t._v("The project ID of the child folder.")])]),t._v(" "),d("tr",[d("td",[t._v("List size")]),t._v(" "),d("td",[t._v("The size of the list, corresponding to the number of child folders retrieved.")])])])])])]),t._v(" "),d("tr",[d("td",[t._v("Super parent folder")]),t._v(" "),d("td",[t._v("\n        The list of super parent folder to this project.\n        "),d("table",[d("tbody",[d("tr",[d("td",[t._v("Project ID")]),t._v(" "),d("td",[t._v("The project ID of the super parent folder.")])]),t._v(" "),d("tr",[d("td",[t._v("List size")]),t._v(" "),d("td",[t._v("The size of the list, corresponding to the number of super parent folders retrieved.")])])])])])]),t._v(" "),d("tr",[d("td",[t._v("Scope")]),t._v(" "),d("td",[t._v("\n        The scope of the project.\n      ")])]),t._v(" "),d("tr",[d("td",[t._v("Has attachments")]),t._v(" "),d("td",[t._v("\n        Indicates if the project has attachments.\n      ")])]),t._v(" "),d("tr",[d("td",[t._v("Permalink")]),t._v(" "),d("td",[t._v("\n        The link to open the project in a web workspace. This is only accessible if the user has the appropriate access.\n      ")])]),t._v(" "),d("tr",[d("td",[t._v("Workflow ID")]),t._v(" "),d("td",[t._v("\n        The ID of the project workflow.\n      ")])]),t._v(" "),d("tr",[d("td",[t._v("Metadata")]),t._v(" "),d("td",[t._v("\n        The metadata of this project. The metadata list size corresponds to the number of metadata entries retrieved.\n      ")])]),t._v(" "),d("tr",[d("td",[t._v("Project")]),t._v(" "),d("td",[t._v("\n        The project properties of this project.\n        "),d("table",[d("tbody",[d("tr",[d("td",[t._v("Author")]),t._v(" "),d("td",[t._v("The author who created the project.")])]),t._v(" "),d("tr",[d("td",[t._v("Owner ID")]),t._v(" "),d("td",[t._v("\n                The list of IDs of project owners.\n                "),d("table",[d("tbody",[d("tr",[d("td",[t._v("User ID")]),t._v(" "),d("td",[t._v("The user ID of the project owner.")])]),t._v(" "),d("tr",[d("td",[t._v("List size")]),t._v(" "),d("td",[t._v("The size of the list, corresponding to the number of project owners retrieved.")])])])])])]),t._v(" "),d("tr",[d("td",[t._v("Status")]),t._v(" "),d("td",[t._v("The status of the task.")])]),t._v(" "),d("tr",[d("td",[t._v("Start date")]),t._v(" "),d("td",[t._v("The date this project was started.")])]),t._v(" "),d("tr",[d("td",[t._v("End date")]),t._v(" "),d("td",[t._v("The date this project was ended.")])]),t._v(" "),d("tr",[d("td",[t._v("Created date")]),t._v(" "),d("td",[t._v("The date this project was created.")])]),t._v(" "),d("tr",[d("td",[t._v("Completed date")]),t._v(" "),d("td",[t._v("The date this project was completed.")])])])])])]),t._v(" "),d("tr",[d("td",[t._v("Custom fields")]),t._v(" "),d("td",[t._v("\n        Includes data from custom field(s).\n      ")])])])]),t._v(" "),d("h2",{attrs:{id:"new-updated-project-trigger-real-time"}},[d("a",{staticClass:"header-anchor",attrs:{href:"#new-updated-project-trigger-real-time"}},[t._v("#")]),t._v(" New/updated project trigger (real-time)")]),t._v(" "),d("p",[t._v("This trigger picks up projects as soon as they are created or updated and returns the project tree data. Each record is processed as a separate job.")]),t._v(" "),d("p",[d("DocImage",{attrs:{src:r(1178),alt:"New/updated project trigger(real time)",width:"2538",height:"1392"}}),t._v(" "),d("em",[t._v("New/updated project trigger (real time)")])],1),t._v(" "),d("h3",{attrs:{id:"input-fields-2"}},[d("a",{staticClass:"header-anchor",attrs:{href:"#input-fields-2"}},[t._v("#")]),t._v(" Input fields")]),t._v(" "),d("table",{staticClass:"unchanged rich-diff-level-one"},[d("thead",[d("tr",[d("th",{attrs:{width:"25%"}},[t._v("Input field")]),t._v(" "),d("th",[t._v("Description")])])]),t._v(" "),d("tbody",[d("tr",[d("td",[t._v("When first started, this recipe should pick up events from")]),t._v(" "),d("td",[t._v("\n        Projects created or updated after this time will be processed by the recipe. If left blank, the default will be set to "),d("b",[t._v("one hour")]),t._v(" before the recipe is first started.\n      ")])])])]),t._v(" "),d("h3",{attrs:{id:"output-fields-2"}},[d("a",{staticClass:"header-anchor",attrs:{href:"#output-fields-2"}},[t._v("#")]),t._v(" Output fields")]),t._v(" "),d("table",{staticClass:"unchanged rich-diff-level-one"},[d("thead",[d("tr",[d("th",{attrs:{width:"25%"}},[t._v("Output field")]),t._v(" "),d("th",[t._v("Description")])])]),t._v(" "),d("tbody",[d("tr",[d("td",[t._v("Project ID")]),t._v(" "),d("td",[t._v("\n        The ID of the project.\n      ")])]),t._v(" "),d("tr",[d("td",[t._v("Account ID")]),t._v(" "),d("td",[t._v("\n        The ID of the account.\n      ")])]),t._v(" "),d("tr",[d("td",[t._v("Title")]),t._v(" "),d("td",[t._v("\n        The title of the project.\n      ")])]),t._v(" "),d("tr",[d("td",[t._v("Updated date")]),t._v(" "),d("td",[t._v("\n        The date this project was updated.\n      ")])]),t._v(" "),d("tr",[d("td",[t._v("Created date")]),t._v(" "),d("td",[t._v("\n        The date this project was created.\n      ")])]),t._v(" "),d("tr",[d("td",[t._v("Description")]),t._v(" "),d("td",[t._v("\n        The description of the project. Will be blank if not specified.\n      ")])]),t._v(" "),d("tr",[d("td",[t._v("Users who share the project")]),t._v(" "),d("td",[t._v("\n        The list of users who share the project.\n        "),d("table",[d("tbody",[d("tr",[d("td",[t._v("User ID")]),t._v(" "),d("td",[t._v("The ID of the user who shares this project.")])]),t._v(" "),d("tr",[d("td",[t._v("List size")]),t._v(" "),d("td",[t._v("The size of the list, corresponding to the number of users retrieved.")])])])])])]),t._v(" "),d("tr",[d("td",[t._v("Parent folder")]),t._v(" "),d("td",[t._v("\n        The list of parent folders of this project.\n        "),d("table",[d("tbody",[d("tr",[d("td",[t._v("Project ID")]),t._v(" "),d("td",[t._v("The project ID of the parent folder.")])]),t._v(" "),d("tr",[d("td",[t._v("List size")]),t._v(" "),d("td",[t._v("The size of the list, corresponding to the number of parent folders retrieved.")])])])])])]),t._v(" "),d("tr",[d("td",[t._v("Child folder")]),t._v(" "),d("td",[t._v("\n        The list of child folders of this project.\n        "),d("table",[d("tbody",[d("tr",[d("td",[t._v("Project ID")]),t._v(" "),d("td",[t._v("The project ID of the child folder.")])]),t._v(" "),d("tr",[d("td",[t._v("List size")]),t._v(" "),d("td",[t._v("The size of the list, corresponding to the number of child folders retrieved.")])])])])])]),t._v(" "),d("tr",[d("td",[t._v("Super parent folder")]),t._v(" "),d("td",[t._v("\n        The list of super parent folder to this project.\n        "),d("table",[d("tbody",[d("tr",[d("td",[t._v("Project ID")]),t._v(" "),d("td",[t._v("The project ID of the super parent folder.")])]),t._v(" "),d("tr",[d("td",[t._v("List size")]),t._v(" "),d("td",[t._v("The size of the list, corresponding to the number of super parent folders retrieved.")])])])])])]),t._v(" "),d("tr",[d("td",[t._v("Scope")]),t._v(" "),d("td",[t._v("\n        The scope of the project.\n      ")])]),t._v(" "),d("tr",[d("td",[t._v("Has attachments")]),t._v(" "),d("td",[t._v("\n        Indicates if the project has attachments.\n      ")])]),t._v(" "),d("tr",[d("td",[t._v("Permalink")]),t._v(" "),d("td",[t._v("\n        The link to open the project in a web workspace. This is only accessible if the user has the appropriate access.\n      ")])]),t._v(" "),d("tr",[d("td",[t._v("Workflow ID")]),t._v(" "),d("td",[t._v("\n        The ID of the project workflow.\n      ")])]),t._v(" "),d("tr",[d("td",[t._v("Metadata")]),t._v(" "),d("td",[t._v("\n        The metadata of this project. The metadata list size corresponds to the number of metadata entries retrieved.\n      ")])]),t._v(" "),d("tr",[d("td",[t._v("Project")]),t._v(" "),d("td",[t._v("\n        The project properties of this project.\n        "),d("table",[d("tbody",[d("tr",[d("td",[t._v("Author")]),t._v(" "),d("td",[t._v("The author who created the project.")])]),t._v(" "),d("tr",[d("td",[t._v("Owner ID")]),t._v(" "),d("td",[t._v("\n                The list of IDs of project owners.\n                "),d("table",[d("tbody",[d("tr",[d("td",[t._v("User ID")]),t._v(" "),d("td",[t._v("The user ID of the project owner.")])]),t._v(" "),d("tr",[d("td",[t._v("List size")]),t._v(" "),d("td",[t._v("The size of the list, corresponding to the number of project owners retrieved.")])])])])])]),t._v(" "),d("tr",[d("td",[t._v("Status")]),t._v(" "),d("td",[t._v("The status of the project.")])]),t._v(" "),d("tr",[d("td",[t._v("Start date")]),t._v(" "),d("td",[t._v("The date this project was started.")])]),t._v(" "),d("tr",[d("td",[t._v("End date")]),t._v(" "),d("td",[t._v("The date this project was ended.")])]),t._v(" "),d("tr",[d("td",[t._v("Created date")]),t._v(" "),d("td",[t._v("The date this project was created.")])]),t._v(" "),d("tr",[d("td",[t._v("Completed date")]),t._v(" "),d("td",[t._v("The date this project was completed.")])])])])])]),t._v(" "),d("tr",[d("td",[t._v("Custom fields")]),t._v(" "),d("td",[t._v("\n        Includes data from custom field(s).\n      ")])])])])])}),[],!1,null,null,null);e.default=o.exports}}]);