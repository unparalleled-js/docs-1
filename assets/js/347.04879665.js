(window.webpackJsonp=window.webpackJsonp||[]).push([[347],{1095:function(t,e,a){t.exports=a.p+"assets/img/replicate-action.a47ae623.png"},2396:function(t,e,a){"use strict";a.r(e);var n=a(0),s=Object(n.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"snowflake-replicate-action"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#snowflake-replicate-action"}},[t._v("#")]),t._v(" Snowflake - Replicate action")]),t._v(" "),n("p",[t._v("This action updates a selected table in your Snowflake instance. It takes a list datapill as input and inserts or updates them as rows.")]),t._v(" "),n("p",[t._v("Workato will first "),n("a",{attrs:{href:"#workato-schema-mapper"}},[t._v("detect and compare the schema")]),t._v(" of the input data and Snowflake table. If they do not match, this action will create new columns in the Snowflake table. This ensures that all the data from your input will be automatically synced in Snowflake, even if there are updates to the input schema.")]),t._v(" "),n("p",[n("DocImage",{attrs:{src:a(1095),alt:"Replicate action",width:"1266",height:"969"}}),t._v(" "),n("em",[t._v("Replicate action")])],1),t._v(" "),n("h2",{attrs:{id:"input"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#input"}},[t._v("#")]),t._v(" Input")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("Input")]),t._v(" "),n("th",[t._v("Description")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("Table name")]),t._v(" "),n("td",[t._v("Select the table to insert your rows by typing the full table name. Snowflake is case insensitive.")])]),t._v(" "),n("tr",[n("td",[t._v("Unique key")]),t._v(" "),n("td",[t._v("Rows with unique key values found will be updated with the data provided. Rows without existing unique key values will be created with data provided.")])]),t._v(" "),n("tr",[n("td",[t._v("Rows")]),t._v(" "),n("td",[t._v("Use a list datapill as input.")])]),t._v(" "),n("tr",[n("td",[t._v("Flatten columns")]),t._v(" "),n("td",[t._v("If your input data is formatted as an object, use this toggle to flatten the object into individual key-value pairs. See the example "),n("a",{attrs:{href:"#when-to-use-flatten"}},[t._v("below")]),t._v(".")])])])]),t._v(" "),n("div",{staticClass:"custom-block warning"},[n("p",{staticClass:"custom-block-title"},[t._v("Rows limit")]),t._v(" "),n("p",[t._v("Snowflake has a limit of 16,384 rows for insert/update statements. Input lists with more than 16,384 rows will cause this job to fail.")])]),t._v(" "),n("h3",{attrs:{id:"when-to-use-flatten"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#when-to-use-flatten"}},[t._v("#")]),t._v(" When to use flatten")]),t._v(" "),n("p",[t._v("If you have data formatted as an object, you may not be able to access nested data directly (e.g. nested within a JSON object).")]),t._v(" "),n("p",[t._v("Use this toggle to flatten the object and treat individual key-value pairs as unique columns. This action will only flatten 1 layer of nested data.")]),t._v(" "),n("p",[t._v("Here is an example from a data source.")]),t._v(" "),n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"id"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"John Doe"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"handles"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"github"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"johndoe"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"slack"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"john"')]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("An unflattened row would look like this:")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("ID")]),t._v(" "),n("th",[t._v("NAME")]),t._v(" "),n("th",[t._v("HANDLES")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("1")]),t._v(" "),n("td",[t._v("John Doe")]),t._v(" "),n("td",[n("code",[t._v('{"github": "johndoe", "slack": "john"}')])])])])]),t._v(" "),n("p",[t._v("A flattened row will look like this:")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("ID")]),t._v(" "),n("th",[t._v("NAME")]),t._v(" "),n("th",[t._v("HANDLES_GITHUB")]),t._v(" "),n("th",[t._v("HANDLES_SLACK")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("1")]),t._v(" "),n("td",[t._v("John Doe")]),t._v(" "),n("td",[t._v("johndoe")]),t._v(" "),n("td",[t._v("john")])])])]),t._v(" "),n("h2",{attrs:{id:"output"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#output"}},[t._v("#")]),t._v(" Output")]),t._v(" "),n("p",[t._v("The output of this action is a count of the number of rows upserted.")]),t._v(" "),n("h2",{attrs:{id:"workato-schema-mapper"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#workato-schema-mapper"}},[t._v("#")]),t._v(" Workato schema mapper")]),t._v(" "),n("p",[t._v("Each data source (API, Database and File) has its own schema. To maintain consistency, this action maps each data type from the source to the Snowflake table schema. This mapping is done before creating/updating the Snowflake table.")]),t._v(" "),n("p",[t._v("Input data will be converted to Snowflake data types, based on the mappings defined below.")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",{staticStyle:{"text-align":"left"}},[t._v("Workato type")]),t._v(" "),n("th",{staticStyle:{"text-align":"left"}},[t._v("Snowflake type")])])]),t._v(" "),n("tbody",[n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("string")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[n("a",{attrs:{href:"https://docs.snowflake.net/manuals/sql-reference/data-types-text.html#data-types-for-text-strings",target:"_blank",rel:"noopener noreferrer"}},[t._v("varchar"),n("OutboundLink")],1),n("br"),t._v("Defaults to maximum length.")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("string(binary)")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[n("a",{attrs:{href:"https://docs.snowflake.net/manuals/sql-reference/data-types-text.html#data-types-for-binary-strings",target:"_blank",rel:"noopener noreferrer"}},[t._v("binary"),n("OutboundLink")],1)])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("date")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[n("a",{attrs:{href:"https://docs.snowflake.net/manuals/sql-reference/data-types-datetime.html#date",target:"_blank",rel:"noopener noreferrer"}},[t._v("date"),n("OutboundLink")],1)])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("date_time timestamp")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[n("a",{attrs:{href:"https://docs.snowflake.net/manuals/sql-reference/data-types-datetime.html#timestamp",target:"_blank",rel:"noopener noreferrer"}},[t._v("timestamp"),n("OutboundLink")],1),n("br"),t._v("Workato will use the timezone defined in the "),n("router-link",{attrs:{to:"/connectors/snowflake.html#database-timezone"}},[t._v("connection setup")]),t._v(", or use the default Snowflake user account timezone.")],1)]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("integer")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[n("a",{attrs:{href:"https://docs.snowflake.net/manuals/sql-reference/data-types-numeric.html#data-types-for-fixed-point-numbers",target:"_blank",rel:"noopener noreferrer"}},[t._v("number"),n("OutboundLink")],1),n("br"),t._v("Precision and scale defaults to (38, 0).")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("number")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[n("a",{attrs:{href:"https://docs.snowflake.net/manuals/sql-reference/data-types-numeric.html#data-types-for-floating-point-numbers",target:"_blank",rel:"noopener noreferrer"}},[t._v("double"),n("OutboundLink")],1)])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("boolean")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[n("a",{attrs:{href:"https://docs.snowflake.net/manuals/sql-reference/data-types-logical.html#boolean",target:"_blank",rel:"noopener noreferrer"}},[t._v("boolean"),n("OutboundLink")],1)])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"left"}},[t._v("object")]),t._v(" "),n("td",{staticStyle:{"text-align":"left"}},[n("a",{attrs:{href:"https://docs.snowflake.net/manuals/sql-reference/data-types-semistructured.html#variant",target:"_blank",rel:"noopener noreferrer"}},[t._v("variant"),n("OutboundLink")],1)])])])])])}),[],!1,null,null,null);e.default=s.exports}}]);