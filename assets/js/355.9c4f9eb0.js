(window.webpackJsonp=window.webpackJsonp||[]).push([[355],{1125:function(r,t,e){r.exports=e.p+"assets/img/new-worker-trigger.e80d1c12.png"},2413:function(r,t,e){"use strict";e.r(t);var o=e(0),a=Object(o.a)({},(function(){var r=this,t=r.$createElement,o=r._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[o("h1",{attrs:{id:"workday-rest-new-worker-trigger"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#workday-rest-new-worker-trigger"}},[r._v("#")]),r._v(" Workday REST - New worker trigger")]),r._v(" "),o("p",[r._v("This trigger picks up workers that are created in your Workday instance. Each row is processed as a separate job. When first started, all existing workers will be processed as individual jobs. Subsequently, it triggers when a worker is created. It checks for new rows once every poll interval.")]),r._v(" "),o("p",[o("DocImage",{attrs:{src:e(1125),alt:"New worker trigger",width:"2487",height:"1944"}}),r._v(" "),o("em",[r._v("New worker trigger")])],1),r._v(" "),o("h2",{attrs:{id:"input-fields"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#input-fields"}},[r._v("#")]),r._v(" Input fields")]),r._v(" "),o("table",[o("thead",[o("tr",[o("th",[r._v("Input field")]),r._v(" "),o("th",[r._v("Description")])])]),r._v(" "),o("tbody",[o("tr",[o("td",[r._v("Name filter")]),r._v(" "),o("td",[o("strong",[r._v("Optional")]),r._v(". Use this to filter workers by name. Only workers with names that start with the provided text will be processed.")])])])]),r._v(" "),o("h2",{attrs:{id:"output-fields"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#output-fields"}},[r._v("#")]),r._v(" Output fields")]),r._v(" "),o("table",{staticClass:"unchanged rich-diff-level-one"},[o("thead",[o("tr",[o("th",{attrs:{width:"25%"}},[r._v("Output field")]),r._v(" "),o("th",[r._v("Description")])])]),r._v(" "),o("tbody",[o("tr",[o("td",[r._v("Descriptor")]),r._v(" "),o("td",[r._v("Worker full name")])]),r._v(" "),o("tr",[o("td",[r._v("ID")]),r._v(" "),o("td",[r._v("Workday ID or the worker record.")])]),r._v(" "),o("tr",[o("td",[r._v("HREF")]),r._v(" "),o("td",[r._v("API resource URL of the worker record.")])]),r._v(" "),o("tr",[o("td",[r._v("Primary supervisory organization")]),r._v(" "),o("td",[r._v("Primary supervisory organization object of this worker record. Contains descriptor (full name), Workday ID and HREF.")])]),r._v(" "),o("tr",[o("td",[r._v("Business title")]),r._v(" "),o("td",[r._v("Full business title of the worker record.")])]),r._v(" "),o("tr",[o("td",[r._v("Primary work email")]),r._v(" "),o("td",[r._v("Primary work email of the worker record.")])]),r._v(" "),o("tr",[o("td",[r._v("Is manager")]),r._v(" "),o("td",[r._v("Boolean data. "),o("code",[r._v("True")]),r._v(" if the worker record is a manager.")])]),r._v(" "),o("tr",[o("td",[r._v("Primary work phone")]),r._v(" "),o("td",[r._v("Primary phone number of the worker record.")])]),r._v(" "),o("tr",[o("td",[r._v("Location")]),r._v(" "),o("td",[r._v("Location object of this worker record. Contains descriptor (full name) and Workday ID.")])]),r._v(" "),o("tr",[o("td",[r._v("Primary work address text")]),r._v(" "),o("td",[r._v("Full primary address of the worker record.")])]),r._v(" "),o("tr",[o("td",[r._v("Supervisory organizations managed")]),r._v(" "),o("td",[r._v("Supervisory organizations managed by the worker record.")])]),r._v(" "),o("tr",[o("td",[r._v("Years of service")]),r._v(" "),o("td",[r._v("Years of service, as an integer, by the worker.")])]),r._v(" "),o("tr",[o("td",[r._v("Date of birth")]),r._v(" "),o("td",[r._v("Date of birth of the worker record. Format: YYYY-MM-DD")])])])])])}),[],!1,null,null,null);t.default=a.exports}}]);